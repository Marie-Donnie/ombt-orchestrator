---
# ombt-servers, ombt-clients, and ombt-control require alive queues to connect to.
#- name: Check if the control-bus is started
#  wait_for:
#   host: "{{ hostvars[groups['control-bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}"
#   port: "{{ rabbitmq_port }}"
#
#- name: Check if the message bus is started.
#  wait_for:
#   host: "{{ hostvars[groups['bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}"
#   port: "{{ rabbitmq_port }}"

- name: Install and start docker image "ombt" in client mode
  shell: >
         docker run -d -ti beyondtheclouds/ombt
         --debug --control {{ transport }}://{{ hostvars[groups['control-bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}:{{ rabbitmq_port }}
         --url {{ transport }}://{{ hostvars[groups['bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}:{{ rabbitmq_port }} rpc-client
  when: inventory_hostname in groups['ombt-client'] and ombt_args=="rpc-client"
  with_sequence: count={{ nbr_clients }}

- name: Install and start docker image "ombt" in server mode
  shell: >
         docker run -d -ti beyondtheclouds/ombt
         --debug --control {{ transport }}://{{ hostvars[groups['control-bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}:{{ rabbitmq_port }}
         --url {{ transport }}://{{ hostvars[groups['bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}:{{ rabbitmq_port }} rpc-server
  when: inventory_hostname in groups['ombt-server'] and ombt_args=="rpc-server"
  with_sequence: count={{ nbr_servers }}

- name: Install and start docker image "ombt" as a controller
  shell: >
         docker run -d -ti beyondtheclouds/ombt
         --debug --control {{ transport }}://{{ hostvars[groups['control-bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}:{{ rabbitmq_port }}
         --url {{ transport }}://{{ hostvars[groups['bus'][0]]['ansible_' + control_network]['ipv4']['address'] }}:{{ rabbitmq_port }} controller {{ call_type }} --calls {{ nbr_calls }}
  when: inventory_hostname in groups['ombt-control'] and ombt_args=="controller"
